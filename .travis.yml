language: cpp

sudo: false

dist: xenial

addons:
  apt:
    sources:
      - ubuntu-toolchain-r-test
    packages:
      - g++-7
      - lcov

matrix:
  include:
    - os: linux
      env:
        - BUILD_TYPE='release'
        - CXX_COMPILER='g++-7'
    - os: linux
      env:
        - BUILD_TYPE='debug'
        - CXX_COMPILER='g++-7'
        - COVERAGE='--coverage'

env:
  global:
    - LC_ALL="en_US.UTF-8"
    - LANG="en_US.UTF-8"
    - LANGUAGE="en_US.UTF-8"
    - PYTHONIOENCODING=UTF-8
    - OMP_NUM_THREADS=1

install:
  - wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh
  - bash miniconda.sh -b -p $HOME/miniconda
  - source "$HOME/miniconda/etc/profile.d/conda.sh"
  - hash -r
  - conda config --set always_yes yes --set changeps1 no
  - conda update -q conda
  - conda info -a
  - conda create -n vampyr -c nostress -c conda-forge cmake mrcpp=*=*nompi* python=3.6
  - conda activate vampyr

before_script:
  - test -n $CXX && unset CXX

script:
  - ./.ci/report_versions.sh
  - |
    python ./setup \
           --type=${BUILD_TYPE} \
           --prefix=$HOME/Software/VAMPyR \
           --cxx=${CXX_COMPILER} \
           ${COVERAGE} \
           ${OPENMP} \
           --cmake-options="-DCMAKE_PREFIX_PATH=${CONDA_PREFIX}"
  - cmake --build build --target install -- VERBOSE=1
  - cd build
  - ctest --output-on-failure --verbose

after_success:
  - |
    if [[ "${COVERAGE}" = "--coverage" ]]; then
      cd ${TRAVIS_BUILD_DIR}
      lcov --version
      lcov --directory build/vampyr/ --capture --output-file coverage.info
      lcov --remove coverage.info '/usr/*' --output-file coverage.info
      lcov --list coverage.info
      bash <(curl -s https://codecov.io/bash) -X gcov || echo "Codecov did not collect coverage reports"
    fi
